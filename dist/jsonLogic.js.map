{"version":3,"file":"jsonLogic.js","sources":["../src/helpers/isArray.js","../src/helpers/is_logic.js","../src/helpers/get_operator_name.js","../src/createJsonLogic.js","../src/helpers/truthy.js","../src/helpers/get_values.js","../src/helpers/arrayUnique.js","../src/helpers/uses_data.js","../src/helpers/rule_like.js","../src/operators/add.js","../src/operators/all.js","../src/operators/and.js","../src/operators/cat.js","../src/operators/divide.js","../src/operators/equal.js","../src/operators/filter.js","../src/operators/greater.js","../src/operators/greaterEqual.js","../src/operators/if.js","../src/operators/in.js","../src/operators/less.js","../src/operators/lessEqual.js","../src/operators/log.js","../src/operators/map.js","../src/operators/max.js","../src/operators/merge.js","../src/operators/method.js","../src/operators/min.js","../src/operators/var.js","../src/operators/missing.js","../src/operators/missing_some.js","../src/operators/modulo.js","../src/operators/multiply.js","../src/operators/none.js","../src/operators/not.js","../src/operators/notEqual.js","../src/operators/notnot.js","../src/operators/or.js","../src/operators/reduce.js","../src/operators/some.js","../src/operators/strictEqual.js","../src/operators/strictNotEqual.js","../src/operators/substr.js","../src/operators/subtract.js","../src/index.js"],"sourcesContent":["export default Array.isArray;\n","import isArray from './isArray';\n\nfunction is_logic(logic) {\n  return (\n    typeof logic === 'object' && // An object\n    logic !== null && // but not null\n    !isArray(logic) && // and not an array\n    Object.keys(logic).length === 1 // with exactly one key\n  );\n}\n\nexport default is_logic;\n","function get_operator_name(logic) {\n  return Object.keys(logic)[0];\n}\n\nexport default get_operator_name;\n","import isArray from './helpers/isArray';\nimport is_logic from './helpers/is_logic';\nimport get_operator_name from './helpers/get_operator_name';\n\nfunction createJsonLogic(operations = {}) {\n  function add_operation(name, operator) {\n    if (isArray(name)) {\n      name.forEach(key => add_operation(key, operator));\n      return;\n    }\n\n    if (typeof operator === 'function') {\n      // `operator` is a function(args...)\n      // need to rework as function(apply, data, raw_args)\n      operations[name] = (apply, data, raw_args) => {\n        const args = raw_args.map(raw_arg => apply(raw_arg, data));\n        return operator(...args);\n      };\n    } else if (typeof operator === 'object') {\n      Object.getOwnPropertyNames(operator).forEach(prop_name => {\n        add_operation(`${name}.${prop_name}`, operator[prop_name]);\n      });\n    }\n  }\n\n  function rm_operation(name) {\n    if (isArray(name)) {\n      name.forEach(key => rm_operation(key));\n      return;\n    }\n\n    delete operations[name];\n  }\n\n  function apply(logic, data) {\n    if (!data) data = {};\n\n    // Does this array contain logic? Only one way to find out.\n    if (isArray(logic)) {\n      return logic.map(l => apply(l, data));\n    }\n    // You've recursed to a primitive, stop!\n    if (!is_logic(logic)) {\n      return logic;\n    }\n\n    const op_name = get_operator_name(logic);\n    let args = logic[op_name]; // operands\n\n    // easy syntax for unary operators, like {\"var\" : \"x\"} instead of strict {\"var\" : [\"x\"]}\n    if (!isArray(args)) {\n      args = [args];\n    }\n\n    const operator = operations[op_name];\n    if (!operator) {\n      throw new Error(`Unrecognized operation ${op_name}`);\n    }\n\n    return operator(apply, data, args);\n  }\n\n  return {\n    apply,\n    add_operation,\n    rm_operation,\n  };\n}\n\nexport default createJsonLogic;\n","import isArray from './isArray';\n\n/*\n  This helper will defer to the JsonLogic spec as a tie-breaker when different language interpreters define different behavior for the truthiness of primitives.  E.g., PHP considers empty arrays to be falsy, but Javascript considers them to be truthy. JsonLogic, as an ecosystem, needs one consistent answer.\n\n  Spec and rationale here: http://jsonlogic.com/truthy\n  */\nfunction truthy(value) {\n  if (isArray(value) && value.length === 0) {\n    return false;\n  }\n\n  return !!value;\n}\n\nexport default truthy;\n","import get_operator_name from './get_operator_name';\n\nfunction get_values(logic) {\n  return logic[get_operator_name(logic)];\n}\n\nexport default get_values;\n","/**\n * Return an array that contains no duplicates (original not modified)\n * @param  {array} array   Original reference array\n * @return {array}         New array with no duplicates\n */\nfunction arrayUnique(array) {\n  const a = [];\n  for (let i = 0, l = array.length; i < l; i++) {\n    if (a.indexOf(array[i]) === -1) {\n      a.push(array[i]);\n    }\n  }\n  return a;\n}\n\nexport default arrayUnique;\n","import isArray from './isArray';\nimport is_logic from './is_logic';\nimport get_operator_name from './get_operator_name';\nimport arrayUnique from './arrayUnique';\n\nfunction uses_data(logic) {\n  const collection = [];\n\n  if (is_logic(logic)) {\n    const op = get_operator_name(logic);\n    let values = logic[op];\n\n    if (!isArray(values)) {\n      values = [values];\n    }\n\n    if (op === 'var') {\n      // This doesn't cover the case where the arg to var is itself a rule.\n      collection.push(values[0]);\n    } else {\n      // Recursion!\n      values.forEach(val => {\n        collection.push(...uses_data(val));\n      });\n    }\n  }\n\n  return arrayUnique(collection);\n}\n\nexport default uses_data;\n","import isArray from './isArray';\nimport is_logic from './is_logic';\nimport get_operator_name from './get_operator_name';\nimport get_values from './get_values';\n\nfunction rule_like(rule, pattern) {\n  // console.log(\"Is \". JSON.stringify(rule) . \" like \" . JSON.stringify(pattern) . \"?\");\n  if (pattern === rule) {\n    return true;\n  } // TODO : Deep object equivalency?\n  if (pattern === '@') {\n    return true;\n  } // Wildcard!\n  if (pattern === 'number') {\n    return typeof rule === 'number';\n  }\n  if (pattern === 'string') {\n    return typeof rule === 'string';\n  }\n  if (pattern === 'array') {\n    // !logic test might be superfluous in JavaScript\n    return isArray(rule) && !is_logic(rule);\n  }\n\n  if (is_logic(pattern)) {\n    if (is_logic(rule)) {\n      const pattern_op = get_operator_name(pattern);\n      const rule_op = get_operator_name(rule);\n\n      if (pattern_op === '@' || pattern_op === rule_op) {\n        // echo \"\\nOperators match, go deeper\\n\";\n        return rule_like(get_values(rule, false), get_values(pattern, false));\n      }\n    }\n    return false; // pattern is logic, rule isn't, can't be eq\n  }\n\n  if (isArray(pattern)) {\n    if (isArray(rule)) {\n      if (pattern.length !== rule.length) {\n        return false;\n      }\n      /*\n        Note, array order MATTERS, because we're using this array test logic to consider arguments, where order can matter. (e.g., + is commutative, but '-' or 'if' or 'var' are NOT)\n      */\n      for (let i = 0; i < pattern.length; i += 1) {\n        // If any fail, we fail\n        if (!rule_like(rule[i], pattern[i])) {\n          return false;\n        }\n      }\n      return true; // If they *all* passed, we pass\n    }\n    return false; // Pattern is array, rule isn't\n  }\n\n  // Not logic, not array, not a === match for rule.\n  return false;\n}\n\nexport default rule_like;\n","// export default function add(...args) {\nexport default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  return args.reduce((a, b) => parseFloat(a) + parseFloat(b), 0);\n}\n","import truthy from '../helpers/truthy';\n\nexport default (apply, data, raw_args) => {\n  const scopedData = apply(raw_args[0], data);\n  const scopedLogic = raw_args[1];\n  // All of an empty set is false. Note, some and none have correct fallback after the for loop\n  if (!scopedData.length) {\n    return false;\n  }\n  for (let i = 0; i < scopedData.length; i += 1) {\n    if (!truthy(apply(scopedLogic, scopedData[i]))) {\n      return false; // First falsy, short circuit\n    }\n  }\n  return true; // All were truthy\n}\n","import truthy from '../helpers/truthy';\n\nexport default (apply, data, raw_args) => {\n  let arg;\n\n  for (const raw_arg of raw_args) {\n    arg = apply(raw_arg, data);\n    if (!truthy(arg)) {\n      return arg;\n    }\n  }\n  return arg; // Last\n}\n","export default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  return args.join('');\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  return a / b;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  // eslint-disable-next-line eqeqeq\n  return a == b;\n}\n","import isArray from '../helpers/isArray';\nimport truthy from '../helpers/truthy';\n\nexport default (apply, data, raw_args) => {\n  const scopedData = apply(raw_args[0], data);\n  const scopedLogic = raw_args[1];\n\n  if (!isArray(scopedData)) {\n    return [];\n  }\n  // Return only the elements from the array in the first argument,\n  // that return truthy when passed to the logic in the second argument.\n  // For parity with JavaScript, reindex the returned array\n  return scopedData.filter(datum => truthy(apply(scopedLogic, datum)));\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  return a > b;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  return a >= b;\n}\n","import truthy from '../helpers/truthy';\n\n// function condition(apply, data, values) {\nexport default (apply, data, raw_args) => {\n  let i;\n\n  /* 'if' should be called with a odd number of parameters, 3 or greater\n    This works on the pattern:\n    if( 0 ){ 1 }else{ 2 };\n    if( 0 ){ 1 }else if( 2 ){ 3 }else{ 4 };\n    if( 0 ){ 1 }else if( 2 ){ 3 }else if( 4 ){ 5 }else{ 6 };\n\n    The implementation is:\n    For pairs of values (0,1 then 2,3 then 4,5 etc)\n    If the first evaluates truthy, evaluate and return the second\n    If the first evaluates falsy, jump to the next pair (e.g, 0,1 to 2,3)\n    given one parameter, evaluate and return it. (it's an Else and all the If/ElseIf were false)\n    given 0 parameters, return NULL (not great practice, but there was no Else)\n    */\n  for (i = 0; i < raw_args.length - 1; i += 2) {\n    if (truthy(apply(raw_args[i], data))) {\n      return apply(raw_args[i + 1], data);\n    }\n  }\n\n  if (raw_args.length === i + 1) {\n    return apply(raw_args[i], data);\n  }\n\n  return null;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  if (!b || typeof b.indexOf === 'undefined') return false;\n  return b.indexOf(a) !== -1;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b, c] = apply(raw_args, data);\n  return c === undefined ? a < b : a < b && b < c;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b, c] = apply(raw_args, data);\n  return c === undefined ? a <= b : a <= b && b <= c;\n}\n","export default (apply, data, raw_args) => {\n  const [a] = apply(raw_args, data);\n  // eslint-disable-next-line no-console\n  console.log(a);\n  return a;\n}\n","import isArray from '../helpers/isArray';\n\nexport default (apply, data, raw_args) => {\n  const scopedData = apply(raw_args[0], data);\n  const scopedLogic = raw_args[1];\n\n  if (!isArray(scopedData)) {\n    return [];\n  }\n\n  return scopedData.map(datum => apply(scopedLogic, datum));\n}\n","export default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  return Math.max(...args);\n}\n","export default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  return args.reduce((a, b) => a.concat(b), []);\n}\n","export default (apply, data, raw_args) => {\n  const [obj, methodName, args] = apply(raw_args, data);\n\n  // eslint-disable-next-line prefer-spread\n  return obj[methodName].apply(obj, args);\n}\n","export default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  return Math.min(...args);\n}\n","export default (apply, data, raw_args) => {\n  const [var_name, default_value] = apply(raw_args, data);\n\n  if (var_name == null || var_name === '') {\n    // TODO: shorten to var_name == null?\n    return data;\n  }\n\n  for (const sub_var_name of String(var_name).split('.')) {\n    data = data[sub_var_name];\n    if (!data) break;\n  }\n\n  return data != null ? data : default_value != null ? default_value : null;\n}\n","import isArray from '../helpers/isArray';\nimport variable from './var';\n\nexport default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  /*\n  Missing can receive many keys as many arguments, like {\"missing:[1,2]}\n  Missing can also receive *one* argument that is an array of keys,\n  which typically happens if it's actually acting on the output of another command\n  (like 'if' or 'merge')\n  */\n\n  const are_missing = [];\n  const keys = isArray(args[0]) ? args[0] : args;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = variable(apply, data, [key]);\n    if (value === null || value === '') {\n      are_missing.push(key);\n    }\n  }\n\n  return are_missing;\n};\n","import missing from './missing';\n\nexport default (apply, data, raw_args) => {\n  const [need_count, options] = apply(raw_args, data);\n  // missing_some takes two arguments, how many (minimum) items must be present, and an array of keys (just like 'missing') to check for presence.\n  const are_missing = missing(apply, data, [options]);\n\n  if (options.length - are_missing.length >= need_count) {\n    return [];\n  }\n  return are_missing;\n};\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  return a % b;\n}\n","export default (apply, data, raw_args) => {\n  const args = apply(raw_args, data);\n  return args.reduce((a, b) => parseFloat(a) * parseFloat(b), 1);\n}\n","export default (apply, data, raw_args) => {\n  const filtered = apply({ filter: raw_args }, data);\n\n  return filtered.length === 0;\n}\n","import truthy from '../helpers/truthy';\n\nexport default (apply, data, raw_args) => {\n  const [a] = apply(raw_args, data);\n  return !truthy(a);\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  // eslint-disable-next-line eqeqeq\n  return a != b;\n}\n","import truthy from '../helpers/truthy';\n\nexport default (apply, data, raw_args) => {\n  const [a] = apply(raw_args, data);\n  return truthy(a);\n}\n","import truthy from '../helpers/truthy';\n\n// function or(apply, data, values) {\nexport default (apply, data, raw_args) => {\n  let current;\n\n  for (let i = 0; i < raw_args.length; i++) {\n    current = apply(raw_args[i], data);\n    if (truthy(current)) {\n      return current;\n    }\n  }\n  return current; // Last\n}\n","import isArray from '../helpers/isArray';\n\nexport default (apply, data, raw_args) => {\n  const scopedData = apply(raw_args[0], data);\n  const scopedLogic = raw_args[1];\n  const initial = typeof raw_args[2] !== 'undefined' ? raw_args[2] : null;\n\n  if (!isArray(scopedData)) {\n    return initial;\n  }\n\n  return scopedData.reduce(\n    (accumulator, current) => apply(scopedLogic, { current, accumulator }),\n    initial\n  );\n}\n","export default (apply, data, raw_args) => {\n  const filtered = apply({ filter: raw_args }, data);\n\n  return filtered.length > 0;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  return a === b;\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  return a !== b;\n}\n","export default (apply, data, raw_args) => {\n  const [source, start, end] = apply(raw_args, data);\n\n  if (end < 0) {\n    // JavaScript doesn't support negative end, this emulates PHP behavior\n    const temp = String(source).substr(start);\n    return temp.substr(0, temp.length + end);\n  }\n  return String(source).substr(start, end);\n}\n","export default (apply, data, raw_args) => {\n  const [a, b] = apply(raw_args, data);\n  if (b === undefined) {\n    return -a;\n  }\n  return a - b;\n}\n","import createJsonLogic from './createJsonLogic';\n\nimport is_logic from './helpers/is_logic';\nimport truthy from './helpers/truthy';\nimport get_operator_name from './helpers/get_operator_name';\nimport get_values from './helpers/get_values';\nimport uses_data from './helpers/uses_data';\nimport rule_like from './helpers/rule_like';\n\nimport op_add from './operators/add';\nimport op_all from './operators/all';\nimport op_and from './operators/and';\nimport op_cat from './operators/cat';\nimport op_divide from './operators/divide';\nimport op_equal from './operators/equal';\nimport op_filter from './operators/filter';\nimport op_greater from './operators/greater';\nimport op_greaterEqual from './operators/greaterEqual';\nimport op_if from './operators/if';\nimport op_in from './operators/in';\nimport op_less from './operators/less';\nimport op_lessEqual from './operators/lessEqual';\nimport op_log from './operators/log';\nimport op_map from './operators/map';\nimport op_max from './operators/max';\nimport op_merge from './operators/merge';\nimport op_method from './operators/method';\nimport op_min from './operators/min';\nimport op_missing from './operators/missing';\nimport op_missing_some from './operators/missing_some';\nimport op_modulo from './operators/modulo';\nimport op_multiply from './operators/multiply';\nimport op_none from './operators/none';\nimport op_not from './operators/not';\nimport op_notEqual from './operators/notEqual';\nimport op_notnot from './operators/notnot';\nimport op_or from './operators/or';\nimport op_reduce from './operators/reduce';\nimport op_some from './operators/some';\nimport op_strictEqual from './operators/strictEqual';\nimport op_strictNotEqual from './operators/strictNotEqual';\nimport op_substr from './operators/substr';\nimport op_subtract from './operators/subtract';\nimport op_var from './operators/var';\n\n// console.log(less);\n\nconst jsonLogic = createJsonLogic({\n  /* eslint-disable */\n  '+': op_add,\n  'all': op_all,\n  'and': op_and,\n  'cat': op_cat,\n  '/': op_divide,\n  '==': op_equal,\n  'filter': op_filter,\n  '>': op_greater,\n  '>=': op_greaterEqual,\n  '?:': op_if,\n  'if': op_if,\n  'in': op_in,\n  '<': op_less,\n  '<=': op_lessEqual,\n  'log': op_log,\n  'map': op_map,\n  'max': op_max,\n  'merge': op_merge,\n  'method': op_method,\n  'min': op_min,\n  'missing': op_missing,\n  'missing_some': op_missing_some,\n  '%': op_modulo,\n  '*': op_multiply,\n  'none': op_none,\n  '!': op_not,\n  '!=': op_notEqual,\n  '!!': op_notnot,\n  'or': op_or,\n  'reduce': op_reduce,\n  'some': op_some,\n  '===': op_strictEqual,\n  '!==': op_strictNotEqual,\n  'substr': op_substr,\n  '-': op_subtract,\n  'var': op_var,\n  /* eslint-enable */\n});\n\n// restore original public API\njsonLogic.is_logic = is_logic;\njsonLogic.truthy = truthy;\njsonLogic.get_operator = get_operator_name;\njsonLogic.get_values = get_values;\njsonLogic.uses_data = uses_data;\njsonLogic.rule_like = rule_like;\n\nexport default jsonLogic;\n"],"names":["Array","isArray","is_logic","logic","Object","keys","length","get_operator_name","createJsonLogic","operations","add_operation","name","operator","forEach","key","apply","data","raw_args","args","map","raw_arg","getOwnPropertyNames","prop_name","rm_operation","l","op_name","Error","truthy","value","get_values","arrayUnique","array","a","i","indexOf","push","uses_data","collection","op","values","val","rule_like","rule","pattern","pattern_op","rule_op","reduce","b","parseFloat","scopedData","scopedLogic","arg","join","filter","datum","c","undefined","console","log","Math","max","concat","obj","methodName","min","var_name","default_value","String","split","sub_var_name","are_missing","variable","need_count","options","missing","filtered","current","initial","accumulator","source","start","end","temp","substr","jsonLogic","op_add","op_all","op_and","op_cat","op_divide","op_equal","op_filter","op_greater","op_greaterEqual","op_if","op_in","op_less","op_lessEqual","op_log","op_map","op_max","op_merge","op_method","op_min","op_missing","op_missing_some","op_modulo","op_multiply","op_none","op_not","op_notEqual","op_notnot","op_or","op_reduce","op_some","op_strictEqual","op_strictNotEqual","op_substr","op_subtract","op_var","get_operator"],"mappings":"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"}